<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Nghia Bui</title><link>/posts/</link><description>All Posts | Nghia Bui</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 14 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/" rel="self" type="application/rss+xml"/><item><title>Nôm na về chữ ký điện tử</title><link>/posts/2023/04-14-nom-na-ve-chu-ky-dien-tu/</link><pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2023/04-14-nom-na-ve-chu-ky-dien-tu/</guid><description>Nhân dịp người dân Hà Nội được cấp chữ ký số miễn phí trên phố đi bộ hồ Gươm, cùng tìm hiểu &amp;ndash; hết sức nôm na &amp;ndash; về chữ ký điện tử.
Chữ ký điện tử là một ứng dụng của mật mã hoá bất đối xứng asymmetric cryptography.
Đại khái là, mỗi người sở hữu một cặp private key + public key. Private key phải giữ bí mật. Public key thì công khai thoải mái.</description></item><item><title>Netflix payment status</title><link>/posts/netflix-payment-status/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/netflix-payment-status/</guid><description>Thông tin gói đang dùng: Tên gói: Netflix Premium Giá: 260,000 VND / month Số người tham gia hiện tại: 3 người. Đóng tiền mỗi người: 85,000 VND / month Tip Đóng qua MoMo 0347270787 là cách tiện lợi nhất. Status: Month Phong Bồng 01/2024 ✅ ✅ 02/2024 ✅ ✅ 03/2024 ✅ ✅ 04/2024 ✅ ✅ 05/2024 ✅ ✅ 06/2024 ✅ ✅ 07/2024 ✅ ✅ 08/2024 ✅ ✅ 09/2024 ✅ ✅ 10/2024 ✅ ✅ 11/2024 ✅ ✅ 12/2024 ✅ 01/2025 ✅ 02/2025 ✅ 03/2025 ✅ 04/2025 05/2025 06/2025</description></item><item><title>"Kiểm soát" Bitcoin?</title><link>/posts/2021/05-19-kiem-soat-bitcoin/</link><pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2021/05-19-kiem-soat-bitcoin/</guid><description><![CDATA[Sau sự kiện elon musk thao túng giá bitcoin, rất nhiều bạn mỉa mai phàn nàn: &ldquo;mục tiêu của bitcoin là để không bị chính phủ kiểm soát, nhưng rốt cục lại bị cá nhân/mập kiểm soát, hố hố&rdquo;.
Cần phải hiểu đúng nghĩa của từ &ldquo;kiểm soát&rdquo; trong ngữ cảnh này. &ldquo;Kiểm soát&rdquo; ở đây không phải là về &ldquo;giá&rdquo;, mà là về (1) phát hành và (2) lưu thông.]]></description></item><item><title>Some thoughts on monads</title><link>/posts/2017/11-30-some-thoughts-on-monads/</link><pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2017/11-30-some-thoughts-on-monads/</guid><description>I know, I know, the world does not need yet another explanation on monads. There have been a lot of related articles you can find on the Internet. Still, most of them are so math-intensive that we as software developers (we aren&amp;rsquo;t good at math) don&amp;rsquo;t want to read. So please give me a try to explain monads to you. I think they are worth knowing about. No math knowledge is required.</description></item><item><title>Giải bài 3 - IMO 2017</title><link>/posts/2017/11-12-giai-bai-3-imo-2017/</link><pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2017/11-12-giai-bai-3-imo-2017/</guid><description>Một bài cực khó của kì thi Toán quốc tế (IMO) 2017 diễn ra tại Rio de Janeiro vào tháng 7 vừa qua. Theo quan sát của một thanh niên an nam thì chỉ có duy nhất một thanh niên nga ngố tên là Mikhail Ivanov giải trọn vẹn bài này trong phòng thi. Thanh niên an nam cũng cố giải, nhưng trong một phòng khác.
Đề bài Một cô thợ săn và một con thỏ tàng hình chơi trò chơi sau trên mặt phẳng.</description></item><item><title>Gradient Boosting</title><link>/posts/2016/12-08-gradient-boosting/</link><pubDate>Thu, 08 Dec 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/12-08-gradient-boosting/</guid><description>Gradient Boosting is a machine learning technique which boosts weak learners to strong ones by using gradient.
My explanation here: https://www.slideshare.net/katatunix/gradient-boosting</description></item><item><title>Hidden Markov Model</title><link>/posts/2016/11-11-hidden-markov-model/</link><pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/11-11-hidden-markov-model/</guid><description>My simple explanation of the Hidden Markov Model.
Shared here: https://www.slideshare.net/katatunix/hidden-markov-model-67982915</description></item><item><title>The universe is 4D?</title><link>/posts/2016/08-11-the-universe-is-4d/</link><pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/08-11-the-universe-is-4d/</guid><description>This statement:
Quote Little did they know that the universe is four dimensional and even the orbit of planets is an illusion produced when straight motion in a four dimensional space is projected into three dimensions (or something). immediately reminded me about projective geometry which is one of the most beautiful systems of mathematics.
So the universe is 4D? I&amp;rsquo;m not sure. But if it was true then we could use the concepts of projective geometry to interpret something interesting.</description></item><item><title>Null References: The Billion Dollar Mistake</title><link>/posts/2016/08-03-null-references-the-billion-dollar-mistake/</link><pubDate>Wed, 03 Aug 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/08-03-null-references-the-billion-dollar-mistake/</guid><description>Null is clearly evil. We as human tend to forget to check null, and boom&amp;hellip; crash!!! Documentation may help, but again we still forget reading documents. Worse, not all documents are correct and up-to-date 100%. Even if we remember to do every null check, our code would be very messy.
So what is the solution?
Checked-exceptions can help but must be used with care otherwise nearly every function/method in our programs could throw checked-exceptions, and try/catch statements would appear everywhere.</description></item><item><title>How do you use Exceptions?</title><link>/posts/2016/07-16-how-do-you-use-exceptions/</link><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/07-16-how-do-you-use-exceptions/</guid><description>Exceptions are a very common concept in most of languages nowadays. In this article we will discuss why exceptions are needed, checked vs. unchecked exceptions, and why C# doesn&amp;rsquo;t have checked exceptions.
In the old days, defensive code were a mess Before exceptions were invented, defensive code had been overwhelmed with a lot of error checking and recovery from those errors, for example:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void handle() { // style #1: error is embedded in the return value int errFoo = foo(); if (errFoo == -1) { // recovery and may return } // style #2: error is assigned to the output parameter unsigned int errBar; int value = bar(.</description></item></channel></rss>