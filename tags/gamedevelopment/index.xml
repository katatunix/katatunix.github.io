<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>GameDevelopment - Tag - Nghia Bui</title><link>/tags/gamedevelopment/</link><description>GameDevelopment - Tag - Nghia Bui</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/gamedevelopment/" rel="self" type="application/rss+xml"/><item><title>OOP vs. ECS</title><link>/posts/2016/01-26-oop-vs-ecs/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/01-26-oop-vs-ecs/</guid><description>In recent years, Entity-Component System (ECS) has been recognized as the most notable architecture for game development. There are many good articles about the architecture that can be found on the Internet, some of them are:
Entity Systems are the future of MMOG development What is an entity system framework for game development? Why use an entity system framework for game development? Understanding Component-Entity-Systems gamedev.stackexchange.com Entity Systems Wiki Entity component system Of course these articles are excellent and well-written, but one thing I don&amp;rsquo;t like about them is that they are not fair at comparing OOP and ECS.</description></item></channel></rss>