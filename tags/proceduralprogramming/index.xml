<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ProceduralProgramming - Tag - Nghia Bui</title><link>/tags/proceduralprogramming/</link><description>ProceduralProgramming - Tag - Nghia Bui</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/proceduralprogramming/" rel="self" type="application/rss+xml"/><item><title>OOP vs. ECS</title><link>/posts/2016/01-26-oop-vs-ecs/</link><pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate><author>xxxx</author><guid>/posts/2016/01-26-oop-vs-ecs/</guid><description><![CDATA[<p>In recent years, Entity-Component System (ECS) has been recognized as the most notable architecture for game development. There are many good articles about the architecture that can be found on the Internet, some of them are:</p>
<ul>
<li><a href="http://t-machine.org/index.php/2007/09/03/entity-systems-are-the-future-of-mmog-development-part-1/" target="_blank" rel="noopener noreffer ">Entity Systems are the future of MMOG development</a></li>
<li><a href="http://www.richardlord.net/blog/what-is-an-entity-framework" target="_blank" rel="noopener noreffer ">What is an entity system framework for game development?</a></li>
<li><a href="http://www.richardlord.net/blog/why-use-an-entity-framework" target="_blank" rel="noopener noreffer ">Why use an entity system framework for game development?</a></li>
<li><a href="http://www.gamedev.net/page/resources/_/technical/game-programming/understanding-component-entity-systems-r3013" target="_blank" rel="noopener noreffer ">Understanding Component-Entity-Systems</a></li>
<li><a href="http://gamedev.stackexchange.com/a/31491" target="_blank" rel="noopener noreffer ">gamedev.stackexchange.com</a></li>
<li><a href="http://entity-systems.wikidot.com/" target="_blank" rel="noopener noreffer ">Entity Systems Wiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/Entity_component_system" target="_blank" rel="noopener noreffer ">Entity component system</a></li>
</ul>
<p>Of course these articles are excellent and well-written, but one thing I don&rsquo;t like about them is that they are not fair at comparing OOP and ECS. They think that class inheritance is fundamental to OOP thus they blame OOP in order to praise ECS as a preference of <em>composition over inheritance</em>.</p>]]></description></item></channel></rss>