<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Database - Tag - Nghia Bui</title><link>/tags/database/</link><description>Database - Tag - Nghia Bui</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/database/" rel="self" type="application/rss+xml"/><item><title>Why object persistence is hard?</title><link>/posts/2016/02-28-why-object-persistence-is-hard/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/02-28-why-object-persistence-is-hard/</guid><description><![CDATA[<p>Object persistence &ndash; for example, saving/loading objects to/from a database &ndash; is easy, especially when using an ORM framework. It is easy because it breaks principles of OO design.</p>
<blockquote>
<p>When objects are used as data structures it is a design smell; and it always has been. When tools like Hibernate call themselves object-relational mappers, they are incorrect. ORMs don&rsquo;t map relational data to objects; they map relational data to data structures. Those data structures are not objects.<br>
&mdash; Uncle Bob in <a href="http://blog.cleancoder.com/uncle-bob/2014/11/24/FPvsOO.html" target="_blank" rel="noopener noreffer ">OO vs FP</a></p>]]></description></item></channel></rss>