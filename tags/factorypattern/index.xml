<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>FactoryPattern - Tag - Kata learns to code</title><link>/tags/factorypattern/</link><description>FactoryPattern - Tag - Kata learns to code</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 27 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/factorypattern/" rel="self" type="application/rss+xml"/><item><title>The two factories</title><link>/posts/2016/02-27-the-two-factories/</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2016/02-27-the-two-factories/</guid><description>&lt;p>Have you ever hesitated between these two implementation of the Factory Pattern:&lt;/p></description></item><item><title>Factory patterns and DIP</title><link>/posts/2015/02-27-factory-patterns-and-dip/</link><pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate><author>Nghia</author><guid>/posts/2015/02-27-factory-patterns-and-dip/</guid><description><![CDATA[<p>Every line of code that uses the <code>new</code> keyword may violate the <a href="http://en.wikipedia.org/wiki/Dependency_inversion_principle" target="_blank" rel="noopener noreffer ">Dependency Inversion Principle</a> (DIP). Indeed, a class after <code>new</code> must be always concrete:</p>]]></description></item></channel></rss>